--- !ditz.rubyforge.org,2008-03-06/issue 
title: "optimize constructor call error augment handling: skip quickly if not an error"
desc: |-
  A critical condition to augmenting an error is currently that the final
  result of the constructor call must have Error.prototype in its internal
  prototype chain.  If not, the value is never augmented.
  
  Could this be detected in some faster way than an actual prototype walk,
  at least for the common cases?
  
  If this cannot be done reliably, would it be possible to detect the
  situation with some certainty to get a fast skip in the majority of cases
  (and a slow check in others)?
type: :task
component: duk
release: v0.10
reporter: sva <sami.vaarala@iki.fi>
status: :unstarted
disposition: 
creation_time: 2013-12-01 22:33:38.968419 Z
references: []

id: 0c9b82c808313365f2ce974ad84f138b8026ca8d
log_events: 
- - 2013-12-01 22:33:39.143934 Z
  - sva <sami.vaarala@iki.fi>
  - created
  - ""
