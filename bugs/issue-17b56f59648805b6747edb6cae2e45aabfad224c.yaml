--- !ditz.rubyforge.org,2008-03-06/issue 
title: "semi-writable property: writable from trusted code, non-writable elsewhere"
desc: |-
  Some virtualized objects need to have a readonly property which can still be
  updated by the magic behind the scenes.
  
  One way to implement this is the Proxy, which certainly works but is quite
  clunky.  Also setter/getter can be used.
  
  Another approach for this specific case would be a property which is readonly
  from Ecmascript code but writable from Duktape/C code.  Or perhaps writable
  with a special function in Duktape object (reference to which would not be
  available after sandbox setup).
type: :task
component: duk
release: 
reporter: Sami Vaarala <sami.vaarala@iki.fi>
status: :unstarted
disposition: 
creation_time: 2014-06-16 10:27:54.357185 Z
references: []

id: 17b56f59648805b6747edb6cae2e45aabfad224c
log_events: 
- - 2014-06-16 10:27:54.533080 Z
  - Sami Vaarala <sami.vaarala@iki.fi>
  - created
  - ""
