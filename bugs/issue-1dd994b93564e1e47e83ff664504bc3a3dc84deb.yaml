--- !ditz.rubyforge.org,2008-03-06/issue 
title: "improve Dukweb: fully typed eval() bindings, error handling, emscripten 'arch string'"
desc: ""
type: :task
component: duk
release: v0.10
reporter: sva <sami.vaarala@iki.fi>
status: :unstarted
disposition: 
creation_time: 2014-02-14 16:14:14.532821 Z
references: []

id: 1dd994b93564e1e47e83ff664504bc3a3dc84deb
log_events: 
- - 2014-02-14 16:14:14.692411 Z
  - sva <sami.vaarala@iki.fi>
  - created
  - ""
- - 2014-02-15 23:20:38.356264 Z
  - sva <sami.vaarala@iki.fi>
  - commented
  - Also, add a fatal error handler which console.log()s the error.
- - 2014-02-16 21:47:48.508632 Z
  - sva <sami.vaarala@iki.fi>
  - commented
  - |-
    More improvements:
    
    - better web layout
    - non-blocking evaluation (worker thread?)
    - "command line mode": evaluate inline after each return press (inline, styled results),
      this should perhaps be the default mode
- - 2014-02-16 21:57:27.921636 Z
  - sva <sami.vaarala@iki.fi>
  - commented
  - |-
    One more approach: model the eval-result dialog as a "chat view".  Use
    automatically expanding textarea for eval input.  When focus is removed
    (onblur), automatically evaluate to a result area and create a new
    input-result pair on top of the old one (probably makes sense to have
    the last one at the top of the page).
    
    The user should be able to change an old input too and re-evaluate it.
    There should probably also be a small button to force re-evaluation.
    Automatic eval on blur should probably be a tickbox option.
