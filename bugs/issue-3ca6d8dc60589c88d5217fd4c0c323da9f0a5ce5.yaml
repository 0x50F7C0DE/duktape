--- !ditz.rubyforge.org,2008-03-06/issue 
title: better handling of temp reg, constant, and inner func 8-bit overflows
desc: |-
  The 8-bit limit for inner functions is actually too tight in any case;
  inner functions are loaded with CLOSURE which can address 18 bits, so
  no overflow handling is needed for CLOSURE anyway (in practice).  So,
  just revise that limit upwards.
  
  Constant overflows need to be handled such that constants outside 8-bit
  range are loaded through a temporary register.  This should be relatively
  straightforward.
  
  Register overflow is the most difficult one, and perhaps not worth fixing.
type: :task
component: duk
release: 
reporter: sva <sami.vaarala@iki.fi>
status: :closed
disposition: :reorg
creation_time: 2013-02-26 12:50:02.923651 Z
references: []

id: 3ca6d8dc60589c88d5217fd4c0c323da9f0a5ce5
log_events: 
- - 2013-02-26 12:50:03.128442 Z
  - sva <sami.vaarala@iki.fi>
  - created
  - ""
- - 2014-01-12 21:38:57.386020 Z
  - sva <sami.vaarala@iki.fi>
  - closed with disposition reorg
  - Duplicate.
