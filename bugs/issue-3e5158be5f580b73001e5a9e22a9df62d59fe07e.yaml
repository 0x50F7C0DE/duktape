--- !ditz.rubyforge.org,2008-03-06/issue 
title: "func 'caller' eval handling: fix handling of eval / strict eval"
desc: |-
  Currently call from non-strict eval code to (non-strict) function f()
  sets f.caller to null.  E.g. V8 sets f.caller as if eval didn't exist
  in the callstack at all, so that f.caller is set to eval's caller.
  
  Currently call from strict eval code to (non-strict) function f()
  sets f.caller to eval (!).  This happens because strict eval code has
  the NEWENV flag which makes it look like an ordinary function.  Call
  handling doesn't force a null to f.caller in this case.  Again, V8
  provides the eval's caller as f.caller.
type: :task
component: duk
release: 
reporter: sva <sami.vaarala@iki.fi>
status: :unstarted
disposition: 
creation_time: 2014-03-13 21:56:26.555410 Z
references: []

id: 3e5158be5f580b73001e5a9e22a9df62d59fe07e
log_events: 
- - 2014-03-13 21:56:26.754973 Z
  - sva <sami.vaarala@iki.fi>
  - created
  - ""
