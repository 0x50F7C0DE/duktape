--- !ditz.rubyforge.org,2008-03-06/issue 
title: wrap string.h calls like memcpy, memmove, memset into DUK_xxx macros to allow easier replacement
desc: Also remove zero size memcpy/memmove checks, and work them into the macros.
type: :task
component: duk
release: v0.7
reporter: sva <sami.vaarala@iki.fi>
status: :closed
disposition: :fixed
creation_time: 2013-09-23 21:17:12.241238 Z
references: []

id: 5b4c3690e23e9ecbdddb40af39abbd804dc5d398
log_events: 
- - 2013-09-23 21:17:12.400590 Z
  - sva <sami.vaarala@iki.fi>
  - created
  - ""
- - 2013-09-23 22:06:42.275917 Z
  - sva <sami.vaarala@iki.fi>
  - commented
  - |-
    Zero length checks need to be added to e.g. memcmp() if platform is not known
    to have a sane memcmp().
    
    Should there be a macro for memcmp() where length is already guaranteed to be
    non-zero?  This saves a check on such platforms.  E.g.::
    
      rc = DUK_MEMCMP_NONZERO(s1, s2, n)
- - 2013-09-23 22:14:18.425518 Z
  - sva <sami.vaarala@iki.fi>
  - closed with disposition fixed
  - ""
