--- !ditz.rubyforge.org,2008-03-06/issue 
title: merge the duk_hobject_props.c getprop/putprop/etc functions with Duktape API functions
desc: ""
type: :task
component: duk
release: v0.11
reporter: Sami Vaarala <sami.vaarala@iki.fi>
status: :closed
disposition: :wontfix
creation_time: 2014-06-04 11:09:58.830405 Z
references: []

id: 6c3d97572e2a4b84f642dae066588fa49a36a3d2
log_events: 
- - 2014-06-04 11:09:58.990351 Z
  - Sami Vaarala <sami.vaarala@iki.fi>
  - created
  - ""
- - 2014-06-17 13:58:56.487778 Z
  - Sami Vaarala <sami.vaarala@iki.fi>
  - closed with disposition wontfix
  - |-
    Tried this, see tag: archive/rejected-prop-access-rework.
    
    The end result is not any better, especially for the executor.  The main issue
    in the executor is that not all arguments to property accesses are from the
    value stack, so that they don't necessarily have stack indices (they may be
    from the constant table, in practice).  Thus they either need to be referred to
    with duk_tval pointers or they need to be pushed on the stack.
    
    Pushing them on the stack creates more stack traffic and eliminates the chance
    of doing better "fast path" accesses for common objects (= access a property
    with no stack manipulation).
