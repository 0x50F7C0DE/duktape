--- !ditz.rubyforge.org,2008-03-06/issue 
title: fix assign eval order bugs
desc: ""
type: :bugfix
component: duk
release: v1.2
reporter: Sami Vaarala <sami.vaarala@iki.fi>
status: :closed
disposition: :fixed
creation_time: 2015-02-17 18:39:16.909988 Z
references: []

id: 96b39d34f1a6c808785d193ffc91815fadc2d6c4
log_events: 
- - 2015-02-17 18:39:17.122891 Z
  - Sami Vaarala <sami.vaarala@iki.fi>
  - created
  - ""
- - 2015-02-17 18:41:20.650621 Z
  - Sami Vaarala <sami.vaarala@iki.fi>
  - commented
  - |-
    The trivial fix is to force a property assignment 'a[b]' to use temp reg
    copies for both base and key so that they can't be modified by RHS code.
    A slightly better fix is to allow a tempreg or a constant (but not a variable
    reference).
    
    Both are excessive though and make bytecode worse for common cases.  Perhaps
    try to detect this when '=' is encountered: force the LHS to be assignment
    compatible when that happens?
    
    If the trivial fix is left in, ensure GETPROP etc at least benefit from
    knowing that both values are in registers (and not regconst).
- - 2015-03-16 21:53:59.478993 Z
  - Sami Vaarala <sami.vaarala@iki.fi>
  - closed with disposition fixed
  - ""
