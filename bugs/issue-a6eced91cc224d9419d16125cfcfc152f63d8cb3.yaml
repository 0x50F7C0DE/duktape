--- !ditz.rubyforge.org,2008-03-06/issue 
title: typedefs for basic C types used
desc: |-
  Add typedefs for basic C types used inside Duktape, so that every type
  can be changed when porting to a new platform.  For instance, older
  32-bit systems may have a 16-bit integer.
  
  Older systems also lack the C99 types.  One option would be to forcibly
  define the C99 types; another would be to mimic their syntax to define
  Duktape types (e.g. duk_int32_t which would map to int32_t).  Current
  implementation relies on 'int' being at least 32 bits; what is really
  needed is the C99 int_fast32_t type which is at least 32 bits but may be
  more if it is faster on the platform.
  
  One especially problematic spot is the public API.  What should integer
  types be there?  Should they be changeable - and if so, how?  How would
  that relate to API documentation?  Finally, what types can one reasonably
  except to find (size_t?) and what may need to be redefined (16-bit int
  doesn't suffice)?
type: :task
component: duk
release: v0.9
reporter: sva <sami.vaarala@iki.fi>
status: :in_progress
disposition: 
creation_time: 2013-10-04 20:46:49.582781 Z
references: []

id: a6eced91cc224d9419d16125cfcfc152f63d8cb3
log_events: 
- - 2013-10-04 20:46:49.774890 Z
  - sva <sami.vaarala@iki.fi>
  - created
  - ""
- - 2013-12-08 21:57:55.789111 Z
  - sva <sami.vaarala@iki.fi>
  - changed status from unstarted to in_progress
  - ""
- - 2013-12-12 21:45:12.569377 Z
  - sva <sami.vaarala@iki.fi>
  - assigned to release v0.9 from v0.8
  - ""
