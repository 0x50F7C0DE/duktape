--- !ditz.rubyforge.org,2008-03-06/issue 
title: set error handler explicitly instead of in every duk_pcall/duk_safe_call?
desc: |-
  Very often error handler doesn't need to be set (no error handler) and in
  also quite often the existing error handler can be kept (e.g. code uses a
  global error handler).  Having an error handler in every protected call is
  a bit inconvenient for the caller.
  
  Error handler could be read/written with explicit API calls.  The problem
  is that unwinding won't then be automatic and caller must be careful to
  unwind error handler correctly.
  
  An intermediate approach would be to have an API call to set the pending
  error handler for the next protected call and the duk_pcall/duk_safe_call
  would pick it up.  By default the current error handler would be kept.
type: :task
component: duk
release: v0.8
reporter: sva <sami.vaarala@iki.fi>
status: :unstarted
disposition: 
creation_time: 2013-08-06 06:40:20.110056 Z
references: []

id: be47968f8d7c83bad50c40314e61bd2f9beb52e0
log_events: 
- - 2013-08-06 06:40:20.507034 Z
  - sva <sami.vaarala@iki.fi>
  - created
  - ""
- - 2013-09-29 10:05:52.754896 Z
  - sva <sami.vaarala@iki.fi>
  - assigned to release v0.8 from v0.7
  - ""
